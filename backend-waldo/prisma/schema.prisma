// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Level {
  id           Int                @id @default(autoincrement())
  levelNum     Int
  title        String
  imageUrl     String
  difficulty   String?
  characters   CharacterLocation[]
  leaderboard  LeaderboardEntry[] // Add this line
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model Character {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  locations CharacterLocation[]
}

model CharacterLocation {
  id          Int       @id @default(autoincrement())
  level       Level     @relation(fields: [levelId], references: [id])
  levelId     Int
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int

  // Box coordinates
  x          Float     // top-left x coordinate
  y          Float     // top-left y coordinate
  width      Float     // box width
  height     Float     // box height
  
  @@unique([levelId, characterId])
}

model LeaderboardEntry {
  id          Int      @id @default(autoincrement())
  playerName  String   // Arcade-style name entry
  level       Level    @relation(fields: [levelId], references: [id])
  levelId     Int
  timeSeconds Float    // Completion time in seconds
  score       Int      // Optional scoring system
  createdAt   DateTime @default(now())

  @@index([levelId, score]) // Index for faster leaderboard queries
  @@index([playerName]) // Index for player name searches
}